# 本文件使用tproxy作为客户端监听协议. 服务端配置文件 直接使用 vlesss.server.toml 即可

# 相关配置和讲解 可以对照 https://toutyrater.github.io/app/tproxy.html
# 比如如何配置iptables, 要好好看上面教程. 原理都是一样的, 只是配置文件略有区别。

# 我们不像v2ray/xray一样 使用 dokodemo的额外配置来处理tproxy，而是单独使用 tproxy作为一个协议.

# tproxy无法在 交互模式/apiServer中配置 或 热加载, 只能用 标准toml配置文件启用. （因为涉及到 iptables）

# tproxy只支持客户端, 且只支持linux系统, 一般用于软路由/树莓派等.

[[listen]]
protocol = "tproxy"
ip = "0.0.0.0"    # 这里不要填 127.0.0.1了，否则只会转发本机流量，而一般作为透明代理都是为了转发局域网内其它设备的流量的。
port = 12345
# sockopt.tproxy = true # 不需要明示指明 tproxy这个 sockopt, 因为protocol指出tproxy后就会自动配置该项.

# 不用指明network, 只要指明了tproxy, 就会同时自动监听 tcp和 dup.

#extra = { auto_iptables = true } # 如果给出了 auto_iptables, 且 【protocol 为 tproxy 的listen】【只有一个】, 则程序会自动在开始监听前配置好iptables，并在程序退出前 清除iptables中被程序改动的部分。
# auto_iptables 会一字不差地运行 上面 给出的 toutyrater 的教程中的 iptables命令。


[[dial]]
protocol = "vlesss"
uuid = "a684455c-b14f-11ea-bf0d-42010aaa0003"
host = "127.0.0.1"
port = 4433
version = 0
insecure = true
utls = true

sockopt.mark = 255  #根据上面 toutyrater 给出的 iptables命令，我们这里要设置 mark为255. 看一下 上面 toutyrater的教程吧！

# sockopt.device = "eth32423"   # vs还支持 bindToDevice功能，可以指定 某一个网卡 来监听 或者拨号.
