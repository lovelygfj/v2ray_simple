# 本文件先监听 vlesss，然后 各种回落

[app]
default_uuid = "a684455c-b14f-11ea-bf0d-42010aaa0003"


[[listen]]
tag = "vlesstls"
protocol = "vlesss"
ip = "0.0.0.0"
host = "your-domain-name.com"
port = 8443
cert = "cert.pem"
key = "cert.key"

[[fallback]]

from = ["vlesstls"]
alpn = ["http/1.1"] # 注意, 你的回落的协议要明确指出 alpn, 比如你要回落到vless+ws, 那么你对应的客户端的ws的dial部分 要配置好 这个 http/1.1 作为 alpn, 你不指出那么显然就没alpn, 当然就连不上，这不怨vs。
dest = "@vlessws"   # dest 也可以写成 这种形式, 直接匹配tag, 可防止笔误。

[[fallback]]

from = ["vlesstls"]
alpn = ["h2"]
dest = "@vlessgrpc"


[[listen]]
tag = "vlessws"
protocol = "vless"
network = "unix"
host = "/dev/shm/ws.sock"   # 别忘了加双引号
advancedLayer = "ws"
path = "/simple"

[[fallback]]

from = ["vlessws"]
dest = "/dev/shm/h1.sock"    # 回落到 nginx的 h1 服务，你要配置nginx监听这个文件


[[listen]]
tag = "vlessgrpc"
protocol = "vless"
network = "unix"            # 监听unix domain socket 必须要 给出 network 为 unix
host = "/dev/shm/grpc.sock" # 你必须要保证 /dev/shm路径存在，且你具有写权限，才行。
advancedLayer = "grpc"
path = "very"


[[fallback]]

from = ["vlessgrpc"]
dest = "/dev/shm/h2c.sock"  # 回落到 nginx的 h2c 服务，你要配置nginx监听这个文件


[[fallback]]
dest = 80
